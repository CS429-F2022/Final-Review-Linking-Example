
utils.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <read_data>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   %rbp
   5:	48 89 e5             	mov    %rsp,%rbp
   8:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
   f:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
  16:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
  1d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  24:	00 00 
  26:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  2a:	31 c0                	xor    %eax,%eax
  2c:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
  33:	be 00 01 00 00       	mov    $0x100,%esi
  38:	48 89 c7             	mov    %rax,%rdi
  3b:	b8 00 00 00 00       	mov    $0x0,%eax
  40:	e8 00 00 00 00       	call   45 <read_data+0x45>
  45:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
  4b:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
  52:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  58:	48 89 d6             	mov    %rdx,%rsi
  5b:	89 c7                	mov    %eax,%edi
  5d:	e8 00 00 00 00       	call   62 <read_data+0x62>
  62:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  68:	48 8b 45 90          	mov    -0x70(%rbp),%rax
  6c:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
  73:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
  79:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  80:	41 b9 00 00 00 00    	mov    $0x0,%r9d
  86:	41 89 d0             	mov    %edx,%r8d
  89:	b9 02 00 00 00       	mov    $0x2,%ecx
  8e:	ba 01 00 00 00       	mov    $0x1,%edx
  93:	48 89 c6             	mov    %rax,%rsi
  96:	bf 00 00 00 00       	mov    $0x0,%edi
  9b:	e8 00 00 00 00       	call   a0 <read_data+0xa0>
  a0:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  a7:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
  ad:	89 c7                	mov    %eax,%edi
  af:	e8 00 00 00 00       	call   b4 <read_data+0xb4>
  b4:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
  ba:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
  c1:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
  c8:	48 89 10             	mov    %rdx,(%rax)
  cb:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
  d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  d6:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
  dd:	00 00 
  df:	74 05                	je     e6 <read_data+0xe6>
  e1:	e8 00 00 00 00       	call   e6 <read_data+0xe6>
  e6:	c9                   	leave  
  e7:	c3                   	ret    

00000000000000e8 <read_line>:
  e8:	f3 0f 1e fa          	endbr64 
  ec:	55                   	push   %rbp
  ed:	48 89 e5             	mov    %rsp,%rbp
  f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  f4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  f8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 100:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 104:	eb 0f                	jmp    115 <read_line+0x2d>
 106:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 10a:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 10e:	88 10                	mov    %dl,(%rax)
 110:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
 115:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 119:	48 8d 50 01          	lea    0x1(%rax),%rdx
 11d:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 121:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 125:	48 01 d0             	add    %rdx,%rax
 128:	0f b6 00             	movzbl (%rax),%eax
 12b:	88 45 f7             	mov    %al,-0x9(%rbp)
 12e:	80 7d f7 0a          	cmpb   $0xa,-0x9(%rbp)
 132:	75 d2                	jne    106 <read_line+0x1e>
 134:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 138:	5d                   	pop    %rbp
 139:	c3                   	ret    
