
runner:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 62 2f 00 00    	push   0x2f62(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 63 2f 00 00 	bnd jmp *0x2f63(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 3d 2f 00 00 	bnd jmp *0x2f3d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010c0 <puts@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 cd 2e 00 00 	bnd jmp *0x2ecd(%rip)        # 3f98 <puts@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 c5 2e 00 00 	bnd jmp *0x2ec5(%rip)        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <mmap@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 bd 2e 00 00 	bnd jmp *0x2ebd(%rip)        # 3fa8 <mmap@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <printf@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3fb0 <printf@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <close@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3fb8 <close@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <open@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fc0 <open@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <atoi@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fc8 <atoi@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <fstat@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fd0 <fstat@GLIBC_2.33>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	31 ed                	xor    %ebp,%ebp
    1146:	49 89 d1             	mov    %rdx,%r9
    1149:	5e                   	pop    %rsi
    114a:	48 89 e2             	mov    %rsp,%rdx
    114d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1151:	50                   	push   %rax
    1152:	54                   	push   %rsp
    1153:	45 31 c0             	xor    %r8d,%r8d
    1156:	31 c9                	xor    %ecx,%ecx
    1158:	48 8d 3d c6 04 00 00 	lea    0x4c6(%rip),%rdi        # 1625 <main>
    115f:	ff 15 73 2e 00 00    	call   *0x2e73(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1165:	f4                   	hlt    
    1166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    116d:	00 00 00 

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 99 2e 00 00 	lea    0x2e99(%rip),%rdi        # 4010 <__TMC_END__>
    1177:	48 8d 05 92 2e 00 00 	lea    0x2e92(%rip),%rax        # 4010 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 56 2e 00 00 	mov    0x2e56(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmp    *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 69 2e 00 00 	lea    0x2e69(%rip),%rdi        # 4010 <__TMC_END__>
    11a7:	48 8d 35 62 2e 00 00 	lea    0x2e62(%rip),%rsi        # 4010 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmp    *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	ret    
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	80 3d 35 2e 00 00 00 	cmpb   $0x0,0x2e35(%rip)        # 4020 <completed.0>
    11eb:	75 2b                	jne    1218 <__do_global_dtors_aux+0x38>
    11ed:	55                   	push   %rbp
    11ee:	48 83 3d 02 2e 00 00 	cmpq   $0x0,0x2e02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f5:	00 
    11f6:	48 89 e5             	mov    %rsp,%rbp
    11f9:	74 0c                	je     1207 <__do_global_dtors_aux+0x27>
    11fb:	48 8b 3d 06 2e 00 00 	mov    0x2e06(%rip),%rdi        # 4008 <__dso_handle>
    1202:	e8 a9 fe ff ff       	call   10b0 <__cxa_finalize@plt>
    1207:	e8 64 ff ff ff       	call   1170 <deregister_tm_clones>
    120c:	c6 05 0d 2e 00 00 01 	movb   $0x1,0x2e0d(%rip)        # 4020 <completed.0>
    1213:	5d                   	pop    %rbp
    1214:	c3                   	ret    
    1215:	0f 1f 00             	nopl   (%rax)
    1218:	c3                   	ret    
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	e9 77 ff ff ff       	jmp    11a0 <register_tm_clones>

0000000000001229 <data_preprocess>:
    1229:	f3 0f 1e fa          	endbr64 
    122d:	55                   	push   %rbp
    122e:	48 89 e5             	mov    %rsp,%rbp
    1231:	53                   	push   %rbx
    1232:	48 83 ec 48          	sub    $0x48,%rsp
    1236:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    123a:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    123e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1245:	00 00 
    1247:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    124b:	31 c0                	xor    %eax,%eax
    124d:	48 89 e0             	mov    %rsp,%rax
    1250:	48 89 c6             	mov    %rax,%rsi
    1253:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    125a:	00 
    125b:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1262:	00 
    1263:	b8 08 00 00 00       	mov    $0x8,%eax
    1268:	48 98                	cltq   
    126a:	48 83 e8 01          	sub    $0x1,%rax
    126e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1272:	b8 08 00 00 00       	mov    $0x8,%eax
    1277:	48 98                	cltq   
    1279:	49 89 c0             	mov    %rax,%r8
    127c:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    1282:	b8 08 00 00 00       	mov    $0x8,%eax
    1287:	48 98                	cltq   
    1289:	48 89 c1             	mov    %rax,%rcx
    128c:	bb 00 00 00 00       	mov    $0x0,%ebx
    1291:	b8 08 00 00 00       	mov    $0x8,%eax
    1296:	48 98                	cltq   
    1298:	ba 10 00 00 00       	mov    $0x10,%edx
    129d:	48 83 ea 01          	sub    $0x1,%rdx
    12a1:	48 01 d0             	add    %rdx,%rax
    12a4:	bb 10 00 00 00       	mov    $0x10,%ebx
    12a9:	ba 00 00 00 00       	mov    $0x0,%edx
    12ae:	48 f7 f3             	div    %rbx
    12b1:	48 6b c0 10          	imul   $0x10,%rax,%rax
    12b5:	48 89 c1             	mov    %rax,%rcx
    12b8:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    12bf:	48 89 e2             	mov    %rsp,%rdx
    12c2:	48 29 ca             	sub    %rcx,%rdx
    12c5:	48 39 d4             	cmp    %rdx,%rsp
    12c8:	74 12                	je     12dc <data_preprocess+0xb3>
    12ca:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    12d1:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    12d8:	00 00 
    12da:	eb e9                	jmp    12c5 <data_preprocess+0x9c>
    12dc:	48 89 c2             	mov    %rax,%rdx
    12df:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    12e5:	48 29 d4             	sub    %rdx,%rsp
    12e8:	48 89 c2             	mov    %rax,%rdx
    12eb:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    12f1:	48 85 d2             	test   %rdx,%rdx
    12f4:	74 10                	je     1306 <data_preprocess+0xdd>
    12f6:	25 ff 0f 00 00       	and    $0xfff,%eax
    12fb:	48 83 e8 08          	sub    $0x8,%rax
    12ff:	48 01 e0             	add    %rsp,%rax
    1302:	48 83 08 00          	orq    $0x0,(%rax)
    1306:	48 89 e0             	mov    %rsp,%rax
    1309:	48 83 c0 00          	add    $0x0,%rax
    130d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1311:	eb 40                	jmp    1353 <data_preprocess+0x12a>
    1313:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    1317:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    131b:	48 01 d0             	add    %rdx,%rax
    131e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1322:	48 89 d1             	mov    %rdx,%rcx
    1325:	83 e1 01             	and    $0x1,%ecx
    1328:	0f b6 10             	movzbl (%rax),%edx
    132b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    132f:	88 14 08             	mov    %dl,(%rax,%rcx,1)
    1332:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1336:	0f b6 00             	movzbl (%rax),%eax
    1339:	3c 0a                	cmp    $0xa,%al
    133b:	75 11                	jne    134e <data_preprocess+0x125>
    133d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1341:	0f b6 40 01          	movzbl 0x1(%rax),%eax
    1345:	3c 0a                	cmp    $0xa,%al
    1347:	75 05                	jne    134e <data_preprocess+0x125>
    1349:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
    134e:	48 83 45 c8 01       	addq   $0x1,-0x38(%rbp)
    1353:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    1357:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    135b:	72 b6                	jb     1313 <data_preprocess+0xea>
    135d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1361:	48 89 f4             	mov    %rsi,%rsp
    1364:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1368:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    136f:	00 00 
    1371:	74 05                	je     1378 <data_preprocess+0x14f>
    1373:	e8 58 fd ff ff       	call   10d0 <__stack_chk_fail@plt>
    1378:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    137c:	c9                   	leave  
    137d:	c3                   	ret    

000000000000137e <part1>:
    137e:	f3 0f 1e fa          	endbr64 
    1382:	55                   	push   %rbp
    1383:	48 89 e5             	mov    %rsp,%rbp
    1386:	53                   	push   %rbx
    1387:	48 83 ec 58          	sub    $0x58,%rsp
    138b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    138f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    1393:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    1397:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    139e:	00 00 
    13a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    13a4:	31 c0                	xor    %eax,%eax
    13a6:	48 8d 05 5f 0c 00 00 	lea    0xc5f(%rip),%rax        # 200c <buf_size+0x4>
    13ad:	48 89 c7             	mov    %rax,%rdi
    13b0:	e8 0b fd ff ff       	call   10c0 <puts@plt>
    13b5:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    13bc:	00 
    13bd:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    13c4:	00 
    13c5:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
    13cc:	e9 ab 00 00 00       	jmp    147c <part1+0xfe>
    13d1:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    13d8:	00 
    13d9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    13dd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    13e1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13e5:	48 89 ce             	mov    %rcx,%rsi
    13e8:	48 89 c7             	mov    %rax,%rdi
    13eb:	e8 d7 04 00 00       	call   18c7 <read_line>
    13f0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    13f4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    13f8:	48 89 c7             	mov    %rax,%rdi
    13fb:	e8 20 fd ff ff       	call   1120 <atoi@plt>
    1400:	89 45 cc             	mov    %eax,-0x34(%rbp)
    1403:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)
    1407:	75 39                	jne    1442 <part1+0xc4>
    1409:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    140d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1414:	00 
    1415:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1419:	48 01 d0             	add    %rdx,%rax
    141c:	8b 00                	mov    (%rax),%eax
    141e:	39 45 c8             	cmp    %eax,-0x38(%rbp)
    1421:	7d 18                	jge    143b <part1+0xbd>
    1423:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1427:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    142e:	00 
    142f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1433:	48 01 d0             	add    %rdx,%rax
    1436:	8b 00                	mov    (%rax),%eax
    1438:	89 45 c8             	mov    %eax,-0x38(%rbp)
    143b:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    1440:	eb 3a                	jmp    147c <part1+0xfe>
    1442:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1446:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    144d:	00 
    144e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1452:	48 01 d0             	add    %rdx,%rax
    1455:	8b 18                	mov    (%rax),%ebx
    1457:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    145b:	48 89 c7             	mov    %rax,%rdi
    145e:	e8 bd fc ff ff       	call   1120 <atoi@plt>
    1463:	89 c2                	mov    %eax,%edx
    1465:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1469:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    1470:	00 
    1471:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    1475:	48 01 c8             	add    %rcx,%rax
    1478:	01 da                	add    %ebx,%edx
    147a:	89 10                	mov    %edx,(%rax)
    147c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1480:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax
    1484:	0f 82 47 ff ff ff    	jb     13d1 <part1+0x53>
    148a:	8b 45 c8             	mov    -0x38(%rbp),%eax
    148d:	89 c6                	mov    %eax,%esi
    148f:	48 8d 05 8a 0b 00 00 	lea    0xb8a(%rip),%rax        # 2020 <buf_size+0x18>
    1496:	48 89 c7             	mov    %rax,%rdi
    1499:	b8 00 00 00 00       	mov    $0x0,%eax
    149e:	e8 4d fc ff ff       	call   10f0 <printf@plt>
    14a3:	b8 00 00 00 00       	mov    $0x0,%eax
    14a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    14ac:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    14b3:	00 00 
    14b5:	74 05                	je     14bc <part1+0x13e>
    14b7:	e8 14 fc ff ff       	call   10d0 <__stack_chk_fail@plt>
    14bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    14c0:	c9                   	leave  
    14c1:	c3                   	ret    

00000000000014c2 <part2>:
    14c2:	f3 0f 1e fa          	endbr64 
    14c6:	55                   	push   %rbp
    14c7:	48 89 e5             	mov    %rsp,%rbp
    14ca:	48 83 ec 30          	sub    $0x30,%rsp
    14ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    14d2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    14d6:	48 8d 05 6a 0b 00 00 	lea    0xb6a(%rip),%rax        # 2047 <buf_size+0x3f>
    14dd:	48 89 c7             	mov    %rax,%rdi
    14e0:	e8 db fb ff ff       	call   10c0 <puts@plt>
    14e5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    14ec:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    14f3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    14fa:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1501:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1508:	e9 ba 00 00 00       	jmp    15c7 <part2+0x105>
    150d:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1510:	48 98                	cltq   
    1512:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1519:	00 
    151a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    151e:	48 01 d0             	add    %rdx,%rax
    1521:	8b 00                	mov    (%rax),%eax
    1523:	39 45 f4             	cmp    %eax,-0xc(%rbp)
    1526:	0f 8d 97 00 00 00    	jge    15c3 <part2+0x101>
    152c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    152f:	48 98                	cltq   
    1531:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1538:	00 
    1539:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    153d:	48 01 d0             	add    %rdx,%rax
    1540:	8b 00                	mov    (%rax),%eax
    1542:	39 45 f0             	cmp    %eax,-0x10(%rbp)
    1545:	7d 63                	jge    15aa <part2+0xe8>
    1547:	8b 45 f8             	mov    -0x8(%rbp),%eax
    154a:	48 98                	cltq   
    154c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    1553:	00 
    1554:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1558:	48 01 d0             	add    %rdx,%rax
    155b:	8b 00                	mov    (%rax),%eax
    155d:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    1560:	7d 27                	jge    1589 <part2+0xc7>
    1562:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1565:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1568:	8b 45 ec             	mov    -0x14(%rbp),%eax
    156b:	89 45 f0             	mov    %eax,-0x10(%rbp)
    156e:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1571:	48 98                	cltq   
    1573:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    157a:	00 
    157b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    157f:	48 01 d0             	add    %rdx,%rax
    1582:	8b 00                	mov    (%rax),%eax
    1584:	89 45 ec             	mov    %eax,-0x14(%rbp)
    1587:	eb 3a                	jmp    15c3 <part2+0x101>
    1589:	8b 45 f0             	mov    -0x10(%rbp),%eax
    158c:	89 45 f4             	mov    %eax,-0xc(%rbp)
    158f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1592:	48 98                	cltq   
    1594:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    159b:	00 
    159c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15a0:	48 01 d0             	add    %rdx,%rax
    15a3:	8b 00                	mov    (%rax),%eax
    15a5:	89 45 f0             	mov    %eax,-0x10(%rbp)
    15a8:	eb 19                	jmp    15c3 <part2+0x101>
    15aa:	8b 45 f8             	mov    -0x8(%rbp),%eax
    15ad:	48 98                	cltq   
    15af:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    15b6:	00 
    15b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15bb:	48 01 d0             	add    %rdx,%rax
    15be:	8b 00                	mov    (%rax),%eax
    15c0:	89 45 f4             	mov    %eax,-0xc(%rbp)
    15c3:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    15c7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    15ca:	48 98                	cltq   
    15cc:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)
    15d0:	0f 87 37 ff ff ff    	ja     150d <part2+0x4b>
    15d6:	8b 55 ec             	mov    -0x14(%rbp),%edx
    15d9:	8b 45 f0             	mov    -0x10(%rbp),%eax
    15dc:	01 c2                	add    %eax,%edx
    15de:	8b 45 f4             	mov    -0xc(%rbp),%eax
    15e1:	01 d0                	add    %edx,%eax
    15e3:	89 45 fc             	mov    %eax,-0x4(%rbp)
    15e6:	8b 4d f4             	mov    -0xc(%rbp),%ecx
    15e9:	8b 55 f0             	mov    -0x10(%rbp),%edx
    15ec:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ef:	89 c6                	mov    %eax,%esi
    15f1:	48 8d 05 68 0a 00 00 	lea    0xa68(%rip),%rax        # 2060 <buf_size+0x58>
    15f8:	48 89 c7             	mov    %rax,%rdi
    15fb:	b8 00 00 00 00       	mov    $0x0,%eax
    1600:	e8 eb fa ff ff       	call   10f0 <printf@plt>
    1605:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1608:	89 c6                	mov    %eax,%esi
    160a:	48 8d 05 7d 0a 00 00 	lea    0xa7d(%rip),%rax        # 208e <buf_size+0x86>
    1611:	48 89 c7             	mov    %rax,%rdi
    1614:	b8 00 00 00 00       	mov    $0x0,%eax
    1619:	e8 d2 fa ff ff       	call   10f0 <printf@plt>
    161e:	b8 00 00 00 00       	mov    $0x0,%eax
    1623:	c9                   	leave  
    1624:	c3                   	ret    

0000000000001625 <main>:
    1625:	f3 0f 1e fa          	endbr64 
    1629:	55                   	push   %rbp
    162a:	48 89 e5             	mov    %rsp,%rbp
    162d:	41 57                	push   %r15
    162f:	41 56                	push   %r14
    1631:	41 55                	push   %r13
    1633:	41 54                	push   %r12
    1635:	53                   	push   %rbx
    1636:	48 83 ec 48          	sub    $0x48,%rsp
    163a:	89 7d 9c             	mov    %edi,-0x64(%rbp)
    163d:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
    1641:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1648:	00 00 
    164a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    164e:	31 c0                	xor    %eax,%eax
    1650:	48 89 e0             	mov    %rsp,%rax
    1653:	48 89 c3             	mov    %rax,%rbx
    1656:	83 7d 9c 02          	cmpl   $0x2,-0x64(%rbp)
    165a:	74 0f                	je     166b <main+0x46>
    165c:	48 8d 05 3d 0a 00 00 	lea    0xa3d(%rip),%rax        # 20a0 <buf_size+0x98>
    1663:	48 89 c7             	mov    %rax,%rdi
    1666:	e8 55 fa ff ff       	call   10c0 <puts@plt>
    166b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    166f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1673:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1677:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    167b:	48 8d 15 a6 29 00 00 	lea    0x29a6(%rip),%rdx        # 4028 <data>
    1682:	48 89 d6             	mov    %rdx,%rsi
    1685:	48 89 c7             	mov    %rax,%rdi
    1688:	e8 52 01 00 00       	call   17df <read_data>
    168d:	48 89 05 9c 29 00 00 	mov    %rax,0x299c(%rip)        # 4030 <len>
    1694:	48 8b 15 95 29 00 00 	mov    0x2995(%rip),%rdx        # 4030 <len>
    169b:	48 8b 05 86 29 00 00 	mov    0x2986(%rip),%rax        # 4028 <data>
    16a2:	48 89 d6             	mov    %rdx,%rsi
    16a5:	48 89 c7             	mov    %rax,%rdi
    16a8:	e8 7c fb ff ff       	call   1229 <data_preprocess>
    16ad:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    16b1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    16b5:	48 89 c2             	mov    %rax,%rdx
    16b8:	48 83 ea 01          	sub    $0x1,%rdx
    16bc:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    16c0:	49 89 c6             	mov    %rax,%r14
    16c3:	41 bf 00 00 00 00    	mov    $0x0,%r15d
    16c9:	49 89 c4             	mov    %rax,%r12
    16cc:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    16d2:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    16d9:	00 
    16da:	b8 10 00 00 00       	mov    $0x10,%eax
    16df:	48 83 e8 01          	sub    $0x1,%rax
    16e3:	48 01 d0             	add    %rdx,%rax
    16e6:	be 10 00 00 00       	mov    $0x10,%esi
    16eb:	ba 00 00 00 00       	mov    $0x0,%edx
    16f0:	48 f7 f6             	div    %rsi
    16f3:	48 6b c0 10          	imul   $0x10,%rax,%rax
    16f7:	48 89 c1             	mov    %rax,%rcx
    16fa:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    1701:	48 89 e2             	mov    %rsp,%rdx
    1704:	48 29 ca             	sub    %rcx,%rdx
    1707:	48 39 d4             	cmp    %rdx,%rsp
    170a:	74 12                	je     171e <main+0xf9>
    170c:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    1713:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    171a:	00 00 
    171c:	eb e9                	jmp    1707 <main+0xe2>
    171e:	48 89 c2             	mov    %rax,%rdx
    1721:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1727:	48 29 d4             	sub    %rdx,%rsp
    172a:	48 89 c2             	mov    %rax,%rdx
    172d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    1733:	48 85 d2             	test   %rdx,%rdx
    1736:	74 10                	je     1748 <main+0x123>
    1738:	25 ff 0f 00 00       	and    $0xfff,%eax
    173d:	48 83 e8 08          	sub    $0x8,%rax
    1741:	48 01 e0             	add    %rsp,%rax
    1744:	48 83 08 00          	orq    $0x0,(%rax)
    1748:	48 89 e0             	mov    %rsp,%rax
    174b:	48 83 c0 03          	add    $0x3,%rax
    174f:	48 c1 e8 02          	shr    $0x2,%rax
    1753:	48 c1 e0 02          	shl    $0x2,%rax
    1757:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    175b:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)
    1762:	eb 15                	jmp    1779 <main+0x154>
    1764:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    1768:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    176b:	48 63 d2             	movslq %edx,%rdx
    176e:	c7 04 90 00 00 00 00 	movl   $0x0,(%rax,%rdx,4)
    1775:	83 45 a4 01          	addl   $0x1,-0x5c(%rbp)
    1779:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    177c:	48 98                	cltq   
    177e:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)
    1782:	77 e0                	ja     1764 <main+0x13f>
    1784:	48 8b 0d a5 28 00 00 	mov    0x28a5(%rip),%rcx        # 4030 <len>
    178b:	48 8b 05 96 28 00 00 	mov    0x2896(%rip),%rax        # 4028 <data>
    1792:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    1796:	48 89 ce             	mov    %rcx,%rsi
    1799:	48 89 c7             	mov    %rax,%rdi
    179c:	e8 dd fb ff ff       	call   137e <part1>
    17a1:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    17a5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    17a9:	48 89 d6             	mov    %rdx,%rsi
    17ac:	48 89 c7             	mov    %rax,%rdi
    17af:	e8 0e fd ff ff       	call   14c2 <part2>
    17b4:	b8 00 00 00 00       	mov    $0x0,%eax
    17b9:	48 89 dc             	mov    %rbx,%rsp
    17bc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    17c0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    17c7:	00 00 
    17c9:	74 05                	je     17d0 <main+0x1ab>
    17cb:	e8 00 f9 ff ff       	call   10d0 <__stack_chk_fail@plt>
    17d0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    17d4:	5b                   	pop    %rbx
    17d5:	41 5c                	pop    %r12
    17d7:	41 5d                	pop    %r13
    17d9:	41 5e                	pop    %r14
    17db:	41 5f                	pop    %r15
    17dd:	5d                   	pop    %rbp
    17de:	c3                   	ret    

00000000000017df <read_data>:
    17df:	f3 0f 1e fa          	endbr64 
    17e3:	55                   	push   %rbp
    17e4:	48 89 e5             	mov    %rsp,%rbp
    17e7:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    17ee:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    17f5:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    17fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1803:	00 00 
    1805:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1809:	31 c0                	xor    %eax,%eax
    180b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    1812:	be 00 01 00 00       	mov    $0x100,%esi
    1817:	48 89 c7             	mov    %rax,%rdi
    181a:	b8 00 00 00 00       	mov    $0x0,%eax
    181f:	e8 ec f8 ff ff       	call   1110 <open@plt>
    1824:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%rbp)
    182a:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    1831:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    1837:	48 89 d6             	mov    %rdx,%rsi
    183a:	89 c7                	mov    %eax,%edi
    183c:	e8 ef f8 ff ff       	call   1130 <fstat@plt>
    1841:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    1847:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    184b:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    1852:	8b 95 48 ff ff ff    	mov    -0xb8(%rbp),%edx
    1858:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    185f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    1865:	41 89 d0             	mov    %edx,%r8d
    1868:	b9 02 00 00 00       	mov    $0x2,%ecx
    186d:	ba 01 00 00 00       	mov    $0x1,%edx
    1872:	48 89 c6             	mov    %rax,%rsi
    1875:	bf 00 00 00 00       	mov    $0x0,%edi
    187a:	e8 61 f8 ff ff       	call   10e0 <mmap@plt>
    187f:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    1886:	8b 85 48 ff ff ff    	mov    -0xb8(%rbp),%eax
    188c:	89 c7                	mov    %eax,%edi
    188e:	e8 6d f8 ff ff       	call   1100 <close@plt>
    1893:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)
    1899:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
    18a0:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    18a7:	48 89 10             	mov    %rdx,(%rax)
    18aa:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    18b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    18b5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    18bc:	00 00 
    18be:	74 05                	je     18c5 <read_data+0xe6>
    18c0:	e8 0b f8 ff ff       	call   10d0 <__stack_chk_fail@plt>
    18c5:	c9                   	leave  
    18c6:	c3                   	ret    

00000000000018c7 <read_line>:
    18c7:	f3 0f 1e fa          	endbr64 
    18cb:	55                   	push   %rbp
    18cc:	48 89 e5             	mov    %rsp,%rbp
    18cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    18d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    18d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    18db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    18df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    18e3:	eb 0f                	jmp    18f4 <read_line+0x2d>
    18e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e9:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
    18ed:	88 10                	mov    %dl,(%rax)
    18ef:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    18f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18f8:	48 8d 50 01          	lea    0x1(%rax),%rdx
    18fc:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
    1900:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1904:	48 01 d0             	add    %rdx,%rax
    1907:	0f b6 00             	movzbl (%rax),%eax
    190a:	88 45 f7             	mov    %al,-0x9(%rbp)
    190d:	80 7d f7 0a          	cmpb   $0xa,-0x9(%rbp)
    1911:	75 d2                	jne    18e5 <read_line+0x1e>
    1913:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1917:	5d                   	pop    %rbp
    1918:	c3                   	ret    

Disassembly of section .fini:

000000000000191c <_fini>:
    191c:	f3 0f 1e fa          	endbr64 
    1920:	48 83 ec 08          	sub    $0x8,%rsp
    1924:	48 83 c4 08          	add    $0x8,%rsp
    1928:	c3                   	ret    
